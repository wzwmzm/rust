warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
 --> src/manual/mod.rs:1:7
  |
1 | #[cfg(ocvrs_has_module_core)]
  |       ^^^^^^^^^^^^^^^^^^^^^
  |
  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn`
 --> src/manual/mod.rs:3:7
  |
3 | #[cfg(ocvrs_has_module_dnn)]
  |       ^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_32`
  --> src/manual/core/mat.rs:35:13
   |
35 |         #[cfg(not(ocvrs_opencv_branch_32))]
   |                   ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_32)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_32)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_32`
  --> src/manual/core/mat.rs:37:13
   |
37 |         #[cfg(not(ocvrs_opencv_branch_32))]
   |                   ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_32)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_32)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_32`
   --> src/manual/core/mat.rs:710:13
    |
710 |         #[cfg(not(ocvrs_opencv_branch_32))]
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_32)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_32)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_32`
   --> src/manual/core/mat.rs:712:13
    |
712 |         #[cfg(not(ocvrs_opencv_branch_32))]
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_32)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_32)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
 --> src/manual/mod.rs:9:12
  |
9 |     #[cfg(all(ocvrs_has_module_core, ocvrs_opencv_branch_32))]
  |               ^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_32`
 --> src/manual/mod.rs:9:35
  |
9 |     #[cfg(all(ocvrs_has_module_core, ocvrs_opencv_branch_32))]
  |                                      ^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_32)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_32)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
  --> src/manual/mod.rs:12:8
   |
12 |     #[cfg(ocvrs_has_module_core)]
   |           ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_alphamat`
 --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:1:7
  |
1 | #[cfg(ocvrs_has_module_alphamat)]
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_alphamat)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_alphamat)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_aruco`
 --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:3:7
  |
3 | #[cfg(ocvrs_has_module_aruco)]
  |       ^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_aruco)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_aruco)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_barcode`
 --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:5:7
  |
5 | #[cfg(ocvrs_has_module_barcode)]
  |       ^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_barcode)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_barcode)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bgsegm`
 --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:7:7
  |
7 | #[cfg(ocvrs_has_module_bgsegm)]
  |       ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bgsegm)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bgsegm)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bioinspired`
 --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:9:7
  |
9 | #[cfg(ocvrs_has_module_bioinspired)]
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bioinspired)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bioinspired)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_calib3d`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:11:7
   |
11 | #[cfg(ocvrs_has_module_calib3d)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_calib3d)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_calib3d)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ccalib`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:13:7
   |
13 | #[cfg(ocvrs_has_module_ccalib)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ccalib)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ccalib)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:15:7
   |
15 | #[cfg(ocvrs_has_module_core)]
   |       ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_cvv`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:17:7
   |
17 | #[cfg(ocvrs_has_module_cvv)]
   |       ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_cvv)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_cvv)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:19:7
   |
19 | #[cfg(ocvrs_has_module_dnn)]
   |       ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn_superres`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:21:7
   |
21 | #[cfg(ocvrs_has_module_dnn_superres)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn_superres)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn_superres)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dpm`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:23:7
   |
23 | #[cfg(ocvrs_has_module_dpm)]
   |       ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dpm)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dpm)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_face`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:25:7
   |
25 | #[cfg(ocvrs_has_module_face)]
   |       ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_face)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_face)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_features2d`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:27:7
   |
27 | #[cfg(ocvrs_has_module_features2d)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_features2d)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_features2d)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_flann`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:29:7
   |
29 | #[cfg(ocvrs_has_module_flann)]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_flann)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_flann)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_freetype`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:31:7
   |
31 | #[cfg(ocvrs_has_module_freetype)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_freetype)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_freetype)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_fuzzy`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:33:7
   |
33 | #[cfg(ocvrs_has_module_fuzzy)]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_fuzzy)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_fuzzy)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hdf`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:35:7
   |
35 | #[cfg(ocvrs_has_module_hdf)]
   |       ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hdf)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hdf)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hfs`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:37:7
   |
37 | #[cfg(ocvrs_has_module_hfs)]
   |       ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hfs)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hfs)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_highgui`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:39:7
   |
39 | #[cfg(ocvrs_has_module_highgui)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_highgui)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_highgui)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_img_hash`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:41:7
   |
41 | #[cfg(ocvrs_has_module_img_hash)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_img_hash)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_img_hash)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgcodecs`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:43:7
   |
43 | #[cfg(ocvrs_has_module_imgcodecs)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgcodecs)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgcodecs)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgproc`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:45:7
   |
45 | #[cfg(ocvrs_has_module_imgproc)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgproc)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgproc)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_intensity_transform`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:47:7
   |
47 | #[cfg(ocvrs_has_module_intensity_transform)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_intensity_transform)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_intensity_transform)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_line_descriptor`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:49:7
   |
49 | #[cfg(ocvrs_has_module_line_descriptor)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_line_descriptor)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_line_descriptor)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_mcc`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:51:7
   |
51 | #[cfg(ocvrs_has_module_mcc)]
   |       ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_mcc)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_mcc)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ml`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:53:7
   |
53 | #[cfg(ocvrs_has_module_ml)]
   |       ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ml)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ml)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_objdetect`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:55:7
   |
55 | #[cfg(ocvrs_has_module_objdetect)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_objdetect)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_objdetect)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_optflow`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:57:7
   |
57 | #[cfg(ocvrs_has_module_optflow)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_optflow)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_optflow)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_phase_unwrapping`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:59:7
   |
59 | #[cfg(ocvrs_has_module_phase_unwrapping)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_phase_unwrapping)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_phase_unwrapping)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_photo`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:61:7
   |
61 | #[cfg(ocvrs_has_module_photo)]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_photo)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_photo)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_plot`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:63:7
   |
63 | #[cfg(ocvrs_has_module_plot)]
   |       ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_plot)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_plot)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_quality`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:65:7
   |
65 | #[cfg(ocvrs_has_module_quality)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_quality)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_quality)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rapid`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:67:7
   |
67 | #[cfg(ocvrs_has_module_rapid)]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rapid)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rapid)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rgbd`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:69:7
   |
69 | #[cfg(ocvrs_has_module_rgbd)]
   |       ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rgbd)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rgbd)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_saliency`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:71:7
   |
71 | #[cfg(ocvrs_has_module_saliency)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_saliency)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_saliency)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_shape`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:73:7
   |
73 | #[cfg(ocvrs_has_module_shape)]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_shape)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_shape)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stereo`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:75:7
   |
75 | #[cfg(ocvrs_has_module_stereo)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stereo)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stereo)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stitching`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:77:7
   |
77 | #[cfg(ocvrs_has_module_stitching)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stitching)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stitching)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_structured_light`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:79:7
   |
79 | #[cfg(ocvrs_has_module_structured_light)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_structured_light)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_structured_light)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_superres`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:81:7
   |
81 | #[cfg(ocvrs_has_module_superres)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_superres)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_superres)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_surface_matching`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:83:7
   |
83 | #[cfg(ocvrs_has_module_surface_matching)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_surface_matching)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_surface_matching)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_text`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:85:7
   |
85 | #[cfg(ocvrs_has_module_text)]
   |       ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_text)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_text)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_tracking`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:87:7
   |
87 | #[cfg(ocvrs_has_module_tracking)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_tracking)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_tracking)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_video`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:89:7
   |
89 | #[cfg(ocvrs_has_module_video)]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_video)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_video)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videoio`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:91:7
   |
91 | #[cfg(ocvrs_has_module_videoio)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videoio)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videoio)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videostab`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:93:7
   |
93 | #[cfg(ocvrs_has_module_videostab)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videostab)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videostab)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_viz`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:95:7
   |
95 | #[cfg(ocvrs_has_module_viz)]
   |       ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_viz)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_viz)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_wechat_qrcode`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:97:7
   |
97 | #[cfg(ocvrs_has_module_wechat_qrcode)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_wechat_qrcode)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_wechat_qrcode)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ximgproc`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:99:7
   |
99 | #[cfg(ocvrs_has_module_ximgproc)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ximgproc)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ximgproc)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xobjdetect`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:101:7
    |
101 | #[cfg(ocvrs_has_module_xobjdetect)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xobjdetect)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xobjdetect)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xphoto`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:103:7
    |
103 | #[cfg(ocvrs_has_module_xphoto)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xphoto)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xphoto)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_aruco`
 --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:2:7
  |
2 | #[cfg(ocvrs_has_module_aruco)]
  |       ^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_aruco)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_aruco)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_aruco`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:251:7
    |
251 | #[cfg(ocvrs_has_module_aruco)]
    |       ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_aruco)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_aruco)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_barcode`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:254:7
    |
254 | #[cfg(ocvrs_has_module_barcode)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_barcode)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_barcode)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_barcode`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:283:7
    |
283 | #[cfg(ocvrs_has_module_barcode)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_barcode)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_barcode)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bgsegm`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:286:7
    |
286 | #[cfg(ocvrs_has_module_bgsegm)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bgsegm)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bgsegm)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bgsegm`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:570:7
    |
570 | #[cfg(ocvrs_has_module_bgsegm)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bgsegm)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bgsegm)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bioinspired`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:573:7
    |
573 | #[cfg(ocvrs_has_module_bioinspired)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bioinspired)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bioinspired)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bioinspired`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:692:7
    |
692 | #[cfg(ocvrs_has_module_bioinspired)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bioinspired)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bioinspired)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_calib3d`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:695:7
    |
695 | #[cfg(ocvrs_has_module_calib3d)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_calib3d)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_calib3d)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_calib3d`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:900:7
    |
900 | #[cfg(ocvrs_has_module_calib3d)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_calib3d)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_calib3d)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ccalib`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:903:7
    |
903 | #[cfg(ocvrs_has_module_ccalib)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ccalib)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ccalib)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ccalib`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:947:7
    |
947 | #[cfg(ocvrs_has_module_ccalib)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ccalib)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ccalib)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:950:7
    |
950 | #[cfg(ocvrs_has_module_core)]
    |       ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:4386:7
     |
4386 | #[cfg(ocvrs_has_module_core)]
     |       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:4389:7
     |
4389 | #[cfg(ocvrs_has_module_dnn)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:10533:7
      |
10533 | #[cfg(ocvrs_has_module_dnn)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn_superres`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:10536:7
      |
10536 | #[cfg(ocvrs_has_module_dnn_superres)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn_superres)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn_superres)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn_superres`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:10570:7
      |
10570 | #[cfg(ocvrs_has_module_dnn_superres)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn_superres)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn_superres)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dpm`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:10573:7
      |
10573 | #[cfg(ocvrs_has_module_dpm)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dpm)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dpm)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dpm`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:10639:7
      |
10639 | #[cfg(ocvrs_has_module_dpm)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dpm)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dpm)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_face`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:10642:7
      |
10642 | #[cfg(ocvrs_has_module_face)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_face)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_face)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_face`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:11356:7
      |
11356 | #[cfg(ocvrs_has_module_face)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_face)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_face)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_features2d`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:11359:7
      |
11359 | #[cfg(ocvrs_has_module_features2d)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_features2d)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_features2d)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_features2d`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12070:7
      |
12070 | #[cfg(ocvrs_has_module_features2d)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_features2d)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_features2d)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_flann`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12073:7
      |
12073 | #[cfg(ocvrs_has_module_flann)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_flann)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_flann)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_flann`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12506:7
      |
12506 | #[cfg(ocvrs_has_module_flann)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_flann)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_flann)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_freetype`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12509:7
      |
12509 | #[cfg(ocvrs_has_module_freetype)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_freetype)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_freetype)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_freetype`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12552:7
      |
12552 | #[cfg(ocvrs_has_module_freetype)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_freetype)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_freetype)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hdf`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12555:7
      |
12555 | #[cfg(ocvrs_has_module_hdf)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hdf)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hdf)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hdf`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12588:7
      |
12588 | #[cfg(ocvrs_has_module_hdf)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hdf)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hdf)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hfs`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12591:7
      |
12591 | #[cfg(ocvrs_has_module_hfs)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hfs)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hfs)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hfs`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12634:7
      |
12634 | #[cfg(ocvrs_has_module_hfs)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hfs)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hfs)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_img_hash`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12637:7
      |
12637 | #[cfg(ocvrs_has_module_img_hash)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_img_hash)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_img_hash)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_img_hash`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12975:7
      |
12975 | #[cfg(ocvrs_has_module_img_hash)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_img_hash)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_img_hash)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgproc`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:12978:7
      |
12978 | #[cfg(ocvrs_has_module_imgproc)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgproc)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgproc)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgproc`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:13193:7
      |
13193 | #[cfg(ocvrs_has_module_imgproc)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgproc)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgproc)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_line_descriptor`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:13196:7
      |
13196 | #[cfg(ocvrs_has_module_line_descriptor)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_line_descriptor)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_line_descriptor)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_line_descriptor`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:13363:7
      |
13363 | #[cfg(ocvrs_has_module_line_descriptor)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_line_descriptor)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_line_descriptor)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_mcc`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:13366:7
      |
13366 | #[cfg(ocvrs_has_module_mcc)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_mcc)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_mcc)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_mcc`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:13533:7
      |
13533 | #[cfg(ocvrs_has_module_mcc)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_mcc)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_mcc)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ml`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:13536:7
      |
13536 | #[cfg(ocvrs_has_module_ml)]
      |       ^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ml)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ml)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ml`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:14243:7
      |
14243 | #[cfg(ocvrs_has_module_ml)]
      |       ^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ml)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ml)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_objdetect`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:14246:7
      |
14246 | #[cfg(ocvrs_has_module_objdetect)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_objdetect)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_objdetect)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_objdetect`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:14516:7
      |
14516 | #[cfg(ocvrs_has_module_objdetect)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_objdetect)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_objdetect)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_optflow`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:14519:7
      |
14519 | #[cfg(ocvrs_has_module_optflow)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_optflow)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_optflow)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_optflow`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:14923:7
      |
14923 | #[cfg(ocvrs_has_module_optflow)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_optflow)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_optflow)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_phase_unwrapping`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:14926:7
      |
14926 | #[cfg(ocvrs_has_module_phase_unwrapping)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_phase_unwrapping)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_phase_unwrapping)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_phase_unwrapping`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:15017:7
      |
15017 | #[cfg(ocvrs_has_module_phase_unwrapping)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_phase_unwrapping)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_phase_unwrapping)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_photo`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:15020:7
      |
15020 | #[cfg(ocvrs_has_module_photo)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_photo)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_photo)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_photo`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:15609:7
      |
15609 | #[cfg(ocvrs_has_module_photo)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_photo)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_photo)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_plot`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:15612:7
      |
15612 | #[cfg(ocvrs_has_module_plot)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_plot)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_plot)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_plot`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:15655:7
      |
15655 | #[cfg(ocvrs_has_module_plot)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_plot)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_plot)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_quality`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:15658:7
      |
15658 | #[cfg(ocvrs_has_module_quality)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_quality)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_quality)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_quality`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:15946:7
      |
15946 | #[cfg(ocvrs_has_module_quality)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_quality)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_quality)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rapid`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:15949:7
      |
15949 | #[cfg(ocvrs_has_module_rapid)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rapid)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rapid)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rapid`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:16136:7
      |
16136 | #[cfg(ocvrs_has_module_rapid)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rapid)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rapid)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rgbd`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:16139:7
      |
16139 | #[cfg(ocvrs_has_module_rgbd)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rgbd)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rgbd)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rgbd`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:17218:7
      |
17218 | #[cfg(ocvrs_has_module_rgbd)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rgbd)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rgbd)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_saliency`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:17221:7
      |
17221 | #[cfg(ocvrs_has_module_saliency)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_saliency)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_saliency)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_saliency`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:17644:7
      |
17644 | #[cfg(ocvrs_has_module_saliency)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_saliency)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_saliency)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_shape`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:17647:7
      |
17647 | #[cfg(ocvrs_has_module_shape)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_shape)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_shape)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_shape`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:18150:7
      |
18150 | #[cfg(ocvrs_has_module_shape)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_shape)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_shape)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stereo`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:18153:7
      |
18153 | #[cfg(ocvrs_has_module_stereo)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stereo)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stereo)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stereo`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:18211:7
      |
18211 | #[cfg(ocvrs_has_module_stereo)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stereo)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stereo)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stitching`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:18214:7
      |
18214 | #[cfg(ocvrs_has_module_stitching)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stitching)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stitching)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stitching`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:20084:7
      |
20084 | #[cfg(ocvrs_has_module_stitching)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stitching)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stitching)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_structured_light`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:20087:7
      |
20087 | #[cfg(ocvrs_has_module_structured_light)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_structured_light)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_structured_light)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_structured_light`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:20264:7
      |
20264 | #[cfg(ocvrs_has_module_structured_light)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_structured_light)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_structured_light)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_superres`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:20267:7
      |
20267 | #[cfg(ocvrs_has_module_superres)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_superres)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_superres)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_superres`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:20578:7
      |
20578 | #[cfg(ocvrs_has_module_superres)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_superres)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_superres)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_surface_matching`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:20581:7
      |
20581 | #[cfg(ocvrs_has_module_surface_matching)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_surface_matching)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_surface_matching)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_surface_matching`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:20676:7
      |
20676 | #[cfg(ocvrs_has_module_surface_matching)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_surface_matching)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_surface_matching)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_text`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:20679:7
      |
20679 | #[cfg(ocvrs_has_module_text)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_text)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_text)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_text`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:21110:7
      |
21110 | #[cfg(ocvrs_has_module_text)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_text)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_text)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_tracking`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:21113:7
      |
21113 | #[cfg(ocvrs_has_module_tracking)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_tracking)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_tracking)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_tracking`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:21194:7
      |
21194 | #[cfg(ocvrs_has_module_tracking)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_tracking)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_tracking)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_video`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:21197:7
      |
21197 | #[cfg(ocvrs_has_module_video)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_video)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_video)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_video`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:21746:7
      |
21746 | #[cfg(ocvrs_has_module_video)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_video)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_video)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videoio`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:21749:7
      |
21749 | #[cfg(ocvrs_has_module_videoio)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videoio)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videoio)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videoio`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:21811:7
      |
21811 | #[cfg(ocvrs_has_module_videoio)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videoio)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videoio)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videostab`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:21814:7
      |
21814 | #[cfg(ocvrs_has_module_videostab)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videostab)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videostab)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videostab`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:23402:7
      |
23402 | #[cfg(ocvrs_has_module_videostab)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videostab)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videostab)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ximgproc`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:23405:7
      |
23405 | #[cfg(ocvrs_has_module_ximgproc)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ximgproc)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ximgproc)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ximgproc`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:24618:7
      |
24618 | #[cfg(ocvrs_has_module_ximgproc)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ximgproc)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ximgproc)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xobjdetect`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:24621:7
      |
24621 | #[cfg(ocvrs_has_module_xobjdetect)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xobjdetect)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xobjdetect)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xobjdetect`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:24654:7
      |
24654 | #[cfg(ocvrs_has_module_xobjdetect)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xobjdetect)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xobjdetect)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xphoto`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:24657:7
      |
24657 | #[cfg(ocvrs_has_module_xphoto)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xphoto)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xphoto)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xphoto`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/types.rs:24892:7
      |
24892 | #[cfg(ocvrs_has_module_xphoto)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xphoto)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xphoto)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_alphamat`
 --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:3:7
  |
3 | #[cfg(ocvrs_has_module_alphamat)]
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_alphamat)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_alphamat)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_alphamat`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:11:7
   |
11 | #[cfg(ocvrs_has_module_alphamat)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_alphamat)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_alphamat)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_aruco`
  --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:14:7
   |
14 | #[cfg(ocvrs_has_module_aruco)]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_aruco)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_aruco)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_aruco`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:229:7
    |
229 | #[cfg(ocvrs_has_module_aruco)]
    |       ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_aruco)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_aruco)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_barcode`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:232:7
    |
232 | #[cfg(ocvrs_has_module_barcode)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_barcode)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_barcode)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_barcode`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:264:7
    |
264 | #[cfg(ocvrs_has_module_barcode)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_barcode)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_barcode)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bgsegm`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:267:7
    |
267 | #[cfg(ocvrs_has_module_bgsegm)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bgsegm)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bgsegm)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bgsegm`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:385:7
    |
385 | #[cfg(ocvrs_has_module_bgsegm)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bgsegm)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bgsegm)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bioinspired`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:388:7
    |
388 | #[cfg(ocvrs_has_module_bioinspired)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bioinspired)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bioinspired)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bioinspired`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:473:7
    |
473 | #[cfg(ocvrs_has_module_bioinspired)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bioinspired)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bioinspired)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_calib3d`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:476:7
    |
476 | #[cfg(ocvrs_has_module_calib3d)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_calib3d)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_calib3d)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_calib3d`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:723:7
    |
723 | #[cfg(ocvrs_has_module_calib3d)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_calib3d)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_calib3d)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ccalib`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:726:7
    |
726 | #[cfg(ocvrs_has_module_ccalib)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ccalib)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ccalib)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ccalib`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:819:7
    |
819 | #[cfg(ocvrs_has_module_ccalib)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ccalib)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ccalib)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:822:7
    |
822 | #[cfg(ocvrs_has_module_core)]
    |       ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:4191:7
     |
4191 | #[cfg(ocvrs_has_module_core)]
     |       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_cvv`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:4194:7
     |
4194 | #[cfg(ocvrs_has_module_cvv)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_cvv)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_cvv)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_cvv`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:4214:7
     |
4214 | #[cfg(ocvrs_has_module_cvv)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_cvv)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_cvv)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:4217:7
     |
4217 | #[cfg(ocvrs_has_module_dnn)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:6255:7
     |
6255 | #[cfg(ocvrs_has_module_dnn)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn_superres`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:6258:7
     |
6258 | #[cfg(ocvrs_has_module_dnn_superres)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn_superres)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn_superres)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn_superres`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:6282:7
     |
6282 | #[cfg(ocvrs_has_module_dnn_superres)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn_superres)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn_superres)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dpm`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:6285:7
     |
6285 | #[cfg(ocvrs_has_module_dpm)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dpm)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dpm)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dpm`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:6326:7
     |
6326 | #[cfg(ocvrs_has_module_dpm)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dpm)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dpm)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_face`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:6329:7
     |
6329 | #[cfg(ocvrs_has_module_face)]
     |       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_face)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_face)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_face`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:6734:7
     |
6734 | #[cfg(ocvrs_has_module_face)]
     |       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_face)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_face)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_features2d`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:6737:7
     |
6737 | #[cfg(ocvrs_has_module_features2d)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_features2d)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_features2d)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_features2d`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7128:7
     |
7128 | #[cfg(ocvrs_has_module_features2d)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_features2d)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_features2d)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_flann`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7131:7
     |
7131 | #[cfg(ocvrs_has_module_flann)]
     |       ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_flann)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_flann)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_flann`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7291:7
     |
7291 | #[cfg(ocvrs_has_module_flann)]
     |       ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_flann)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_flann)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_freetype`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7294:7
     |
7294 | #[cfg(ocvrs_has_module_freetype)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_freetype)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_freetype)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_freetype`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7312:7
     |
7312 | #[cfg(ocvrs_has_module_freetype)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_freetype)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_freetype)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_fuzzy`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7315:7
     |
7315 | #[cfg(ocvrs_has_module_fuzzy)]
     |       ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_fuzzy)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_fuzzy)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_fuzzy`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7342:7
     |
7342 | #[cfg(ocvrs_has_module_fuzzy)]
     |       ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_fuzzy)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_fuzzy)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hdf`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7345:7
     |
7345 | #[cfg(ocvrs_has_module_hdf)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hdf)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hdf)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hdf`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7400:7
     |
7400 | #[cfg(ocvrs_has_module_hdf)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hdf)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hdf)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hfs`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7403:7
     |
7403 | #[cfg(ocvrs_has_module_hfs)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hfs)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hfs)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hfs`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7436:7
     |
7436 | #[cfg(ocvrs_has_module_hfs)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hfs)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hfs)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_highgui`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7439:7
     |
7439 | #[cfg(ocvrs_has_module_highgui)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_highgui)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_highgui)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_highgui`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7517:7
     |
7517 | #[cfg(ocvrs_has_module_highgui)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_highgui)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_highgui)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_img_hash`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7520:7
     |
7520 | #[cfg(ocvrs_has_module_img_hash)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_img_hash)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_img_hash)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_img_hash`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7621:7
     |
7621 | #[cfg(ocvrs_has_module_img_hash)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_img_hash)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_img_hash)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgcodecs`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7624:7
     |
7624 | #[cfg(ocvrs_has_module_imgcodecs)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgcodecs)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgcodecs)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgcodecs`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7649:7
     |
7649 | #[cfg(ocvrs_has_module_imgcodecs)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgcodecs)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgcodecs)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgproc`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:7652:7
     |
7652 | #[cfg(ocvrs_has_module_imgproc)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgproc)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgproc)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgproc`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8057:7
     |
8057 | #[cfg(ocvrs_has_module_imgproc)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgproc)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgproc)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_intensity_transform`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8060:7
     |
8060 | #[cfg(ocvrs_has_module_intensity_transform)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_intensity_transform)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_intensity_transform)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_intensity_transform`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8074:7
     |
8074 | #[cfg(ocvrs_has_module_intensity_transform)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_intensity_transform)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_intensity_transform)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_line_descriptor`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8077:7
     |
8077 | #[cfg(ocvrs_has_module_line_descriptor)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_line_descriptor)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_line_descriptor)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_line_descriptor`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8209:7
     |
8209 | #[cfg(ocvrs_has_module_line_descriptor)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_line_descriptor)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_line_descriptor)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_mcc`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8212:7
     |
8212 | #[cfg(ocvrs_has_module_mcc)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_mcc)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_mcc)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_mcc`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8339:7
     |
8339 | #[cfg(ocvrs_has_module_mcc)]
     |       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_mcc)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_mcc)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ml`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8342:7
     |
8342 | #[cfg(ocvrs_has_module_ml)]
     |       ^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ml)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ml)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ml`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8783:7
     |
8783 | #[cfg(ocvrs_has_module_ml)]
     |       ^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ml)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ml)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_objdetect`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:8786:7
     |
8786 | #[cfg(ocvrs_has_module_objdetect)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_objdetect)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_objdetect)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_objdetect`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9058:7
     |
9058 | #[cfg(ocvrs_has_module_objdetect)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_objdetect)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_objdetect)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_optflow`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9061:7
     |
9061 | #[cfg(ocvrs_has_module_optflow)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_optflow)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_optflow)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_optflow`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9343:7
     |
9343 | #[cfg(ocvrs_has_module_optflow)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_optflow)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_optflow)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_phase_unwrapping`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9346:7
     |
9346 | #[cfg(ocvrs_has_module_phase_unwrapping)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_phase_unwrapping)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_phase_unwrapping)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_phase_unwrapping`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9374:7
     |
9374 | #[cfg(ocvrs_has_module_phase_unwrapping)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_phase_unwrapping)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_phase_unwrapping)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_photo`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9377:7
     |
9377 | #[cfg(ocvrs_has_module_photo)]
     |       ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_photo)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_photo)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_photo`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9598:7
     |
9598 | #[cfg(ocvrs_has_module_photo)]
     |       ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_photo)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_photo)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_plot`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9601:7
     |
9601 | #[cfg(ocvrs_has_module_plot)]
     |       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_plot)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_plot)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_plot`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9634:7
     |
9634 | #[cfg(ocvrs_has_module_plot)]
     |       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_plot)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_plot)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_quality`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9637:7
     |
9637 | #[cfg(ocvrs_has_module_quality)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_quality)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_quality)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_quality`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9733:7
     |
9733 | #[cfg(ocvrs_has_module_quality)]
     |       ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_quality)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_quality)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rapid`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9736:7
     |
9736 | #[cfg(ocvrs_has_module_rapid)]
     |       ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rapid)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rapid)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rapid`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9797:7
     |
9797 | #[cfg(ocvrs_has_module_rapid)]
     |       ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rapid)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rapid)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rgbd`
    --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:9800:7
     |
9800 | #[cfg(ocvrs_has_module_rgbd)]
     |       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rgbd)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rgbd)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rgbd`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:10590:7
      |
10590 | #[cfg(ocvrs_has_module_rgbd)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rgbd)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rgbd)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_saliency`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:10593:7
      |
10593 | #[cfg(ocvrs_has_module_saliency)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_saliency)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_saliency)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_saliency`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:10722:7
      |
10722 | #[cfg(ocvrs_has_module_saliency)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_saliency)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_saliency)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_shape`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:10725:7
      |
10725 | #[cfg(ocvrs_has_module_shape)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_shape)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_shape)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_shape`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:10887:7
      |
10887 | #[cfg(ocvrs_has_module_shape)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_shape)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_shape)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stereo`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:10890:7
      |
10890 | #[cfg(ocvrs_has_module_stereo)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stereo)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stereo)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stereo`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:10942:7
      |
10942 | #[cfg(ocvrs_has_module_stereo)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stereo)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stereo)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stitching`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:10945:7
      |
10945 | #[cfg(ocvrs_has_module_stitching)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stitching)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stitching)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stitching`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:11893:7
      |
11893 | #[cfg(ocvrs_has_module_stitching)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stitching)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stitching)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_structured_light`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:11896:7
      |
11896 | #[cfg(ocvrs_has_module_structured_light)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_structured_light)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_structured_light)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_structured_light`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:11976:7
      |
11976 | #[cfg(ocvrs_has_module_structured_light)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_structured_light)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_structured_light)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_superres`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:11979:7
      |
11979 | #[cfg(ocvrs_has_module_superres)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_superres)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_superres)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_superres`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12131:7
      |
12131 | #[cfg(ocvrs_has_module_superres)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_superres)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_superres)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_surface_matching`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12134:7
      |
12134 | #[cfg(ocvrs_has_module_surface_matching)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_surface_matching)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_surface_matching)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_surface_matching`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12219:7
      |
12219 | #[cfg(ocvrs_has_module_surface_matching)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_surface_matching)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_surface_matching)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_text`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12222:7
      |
12222 | #[cfg(ocvrs_has_module_text)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_text)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_text)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_text`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12458:7
      |
12458 | #[cfg(ocvrs_has_module_text)]
      |       ^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_text)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_text)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_tracking`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12461:7
      |
12461 | #[cfg(ocvrs_has_module_tracking)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_tracking)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_tracking)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_tracking`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12545:7
      |
12545 | #[cfg(ocvrs_has_module_tracking)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_tracking)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_tracking)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_video`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12548:7
      |
12548 | #[cfg(ocvrs_has_module_video)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_video)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_video)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_video`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12853:7
      |
12853 | #[cfg(ocvrs_has_module_video)]
      |       ^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_video)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_video)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videoio`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12856:7
      |
12856 | #[cfg(ocvrs_has_module_videoio)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videoio)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videoio)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videoio`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12953:7
      |
12953 | #[cfg(ocvrs_has_module_videoio)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videoio)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videoio)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videostab`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:12956:7
      |
12956 | #[cfg(ocvrs_has_module_videostab)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videostab)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videostab)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videostab`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:13519:7
      |
13519 | #[cfg(ocvrs_has_module_videostab)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videostab)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videostab)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_viz`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:13522:7
      |
13522 | #[cfg(ocvrs_has_module_viz)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_viz)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_viz)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_viz`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:13875:7
      |
13875 | #[cfg(ocvrs_has_module_viz)]
      |       ^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_viz)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_viz)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_wechat_qrcode`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:13878:7
      |
13878 | #[cfg(ocvrs_has_module_wechat_qrcode)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_wechat_qrcode)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_wechat_qrcode)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_wechat_qrcode`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:13890:7
      |
13890 | #[cfg(ocvrs_has_module_wechat_qrcode)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_wechat_qrcode)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_wechat_qrcode)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ximgproc`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:13893:7
      |
13893 | #[cfg(ocvrs_has_module_ximgproc)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ximgproc)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ximgproc)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ximgproc`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:14433:7
      |
14433 | #[cfg(ocvrs_has_module_ximgproc)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ximgproc)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ximgproc)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xobjdetect`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:14436:7
      |
14436 | #[cfg(ocvrs_has_module_xobjdetect)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xobjdetect)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xobjdetect)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xobjdetect`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:14452:7
      |
14452 | #[cfg(ocvrs_has_module_xobjdetect)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xobjdetect)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xobjdetect)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xphoto`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:14455:7
      |
14455 | #[cfg(ocvrs_has_module_xphoto)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xphoto)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xphoto)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xphoto`
     --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/sys.rs:14547:7
      |
14547 | #[cfg(ocvrs_has_module_xphoto)]
      |       ^^^^^^^^^^^^^^^^^^^^^^^
      |
      = help: consider using a Cargo feature instead
      = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
               [lints.rust]
               unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xphoto)'] }
      = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xphoto)");` to the top of the `build.rs`
      = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_alphamat`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:113:8
    |
113 |     #[cfg(ocvrs_has_module_alphamat)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_alphamat)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_alphamat)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_aruco`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:115:8
    |
115 |     #[cfg(ocvrs_has_module_aruco)]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_aruco)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_aruco)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_barcode`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:117:8
    |
117 |     #[cfg(ocvrs_has_module_barcode)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_barcode)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_barcode)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bgsegm`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:119:8
    |
119 |     #[cfg(ocvrs_has_module_bgsegm)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bgsegm)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bgsegm)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_bioinspired`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:121:8
    |
121 |     #[cfg(ocvrs_has_module_bioinspired)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_bioinspired)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_bioinspired)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_calib3d`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:123:8
    |
123 |     #[cfg(ocvrs_has_module_calib3d)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_calib3d)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_calib3d)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ccalib`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:125:8
    |
125 |     #[cfg(ocvrs_has_module_ccalib)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ccalib)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ccalib)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:127:8
    |
127 |     #[cfg(ocvrs_has_module_core)]
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_cvv`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:129:8
    |
129 |     #[cfg(ocvrs_has_module_cvv)]
    |           ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_cvv)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_cvv)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:131:8
    |
131 |     #[cfg(ocvrs_has_module_dnn)]
    |           ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dnn_superres`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:133:8
    |
133 |     #[cfg(ocvrs_has_module_dnn_superres)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dnn_superres)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dnn_superres)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_dpm`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:135:8
    |
135 |     #[cfg(ocvrs_has_module_dpm)]
    |           ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_dpm)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_dpm)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_face`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:137:8
    |
137 |     #[cfg(ocvrs_has_module_face)]
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_face)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_face)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_features2d`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:139:8
    |
139 |     #[cfg(ocvrs_has_module_features2d)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_features2d)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_features2d)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_flann`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:141:8
    |
141 |     #[cfg(ocvrs_has_module_flann)]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_flann)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_flann)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_freetype`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:143:8
    |
143 |     #[cfg(ocvrs_has_module_freetype)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_freetype)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_freetype)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_fuzzy`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:145:8
    |
145 |     #[cfg(ocvrs_has_module_fuzzy)]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_fuzzy)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_fuzzy)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hdf`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:147:8
    |
147 |     #[cfg(ocvrs_has_module_hdf)]
    |           ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hdf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hdf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_hfs`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:149:8
    |
149 |     #[cfg(ocvrs_has_module_hfs)]
    |           ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_hfs)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_hfs)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_highgui`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:151:8
    |
151 |     #[cfg(ocvrs_has_module_highgui)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_highgui)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_highgui)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_img_hash`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:153:8
    |
153 |     #[cfg(ocvrs_has_module_img_hash)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_img_hash)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_img_hash)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgcodecs`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:155:8
    |
155 |     #[cfg(ocvrs_has_module_imgcodecs)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgcodecs)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgcodecs)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_imgproc`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:157:8
    |
157 |     #[cfg(ocvrs_has_module_imgproc)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgproc)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgproc)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_intensity_transform`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:159:8
    |
159 |     #[cfg(ocvrs_has_module_intensity_transform)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_intensity_transform)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_intensity_transform)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_line_descriptor`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:161:8
    |
161 |     #[cfg(ocvrs_has_module_line_descriptor)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_line_descriptor)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_line_descriptor)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_mcc`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:163:8
    |
163 |     #[cfg(ocvrs_has_module_mcc)]
    |           ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_mcc)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_mcc)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ml`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:165:8
    |
165 |     #[cfg(ocvrs_has_module_ml)]
    |           ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ml)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ml)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_objdetect`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:167:8
    |
167 |     #[cfg(ocvrs_has_module_objdetect)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_objdetect)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_objdetect)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_optflow`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:169:8
    |
169 |     #[cfg(ocvrs_has_module_optflow)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_optflow)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_optflow)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_phase_unwrapping`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:171:8
    |
171 |     #[cfg(ocvrs_has_module_phase_unwrapping)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_phase_unwrapping)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_phase_unwrapping)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_photo`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:173:8
    |
173 |     #[cfg(ocvrs_has_module_photo)]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_photo)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_photo)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_plot`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:175:8
    |
175 |     #[cfg(ocvrs_has_module_plot)]
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_plot)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_plot)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_quality`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:177:8
    |
177 |     #[cfg(ocvrs_has_module_quality)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_quality)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_quality)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rapid`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:179:8
    |
179 |     #[cfg(ocvrs_has_module_rapid)]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rapid)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rapid)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rgbd`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:181:8
    |
181 |     #[cfg(ocvrs_has_module_rgbd)]
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rgbd)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rgbd)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_saliency`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:183:8
    |
183 |     #[cfg(ocvrs_has_module_saliency)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_saliency)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_saliency)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_shape`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:185:8
    |
185 |     #[cfg(ocvrs_has_module_shape)]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_shape)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_shape)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stereo`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:187:8
    |
187 |     #[cfg(ocvrs_has_module_stereo)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stereo)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stereo)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stitching`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:189:8
    |
189 |     #[cfg(ocvrs_has_module_stitching)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stitching)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stitching)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_structured_light`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:191:8
    |
191 |     #[cfg(ocvrs_has_module_structured_light)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_structured_light)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_structured_light)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_superres`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:193:8
    |
193 |     #[cfg(ocvrs_has_module_superres)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_superres)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_superres)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_surface_matching`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:195:8
    |
195 |     #[cfg(ocvrs_has_module_surface_matching)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_surface_matching)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_surface_matching)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_text`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:197:8
    |
197 |     #[cfg(ocvrs_has_module_text)]
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_text)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_text)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_tracking`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:199:8
    |
199 |     #[cfg(ocvrs_has_module_tracking)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_tracking)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_tracking)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_video`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:201:8
    |
201 |     #[cfg(ocvrs_has_module_video)]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_video)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_video)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videoio`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:203:8
    |
203 |     #[cfg(ocvrs_has_module_videoio)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videoio)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videoio)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_videostab`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:205:8
    |
205 |     #[cfg(ocvrs_has_module_videostab)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videostab)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videostab)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_viz`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:207:8
    |
207 |     #[cfg(ocvrs_has_module_viz)]
    |           ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_viz)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_viz)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_wechat_qrcode`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:209:8
    |
209 |     #[cfg(ocvrs_has_module_wechat_qrcode)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_wechat_qrcode)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_wechat_qrcode)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_ximgproc`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:211:8
    |
211 |     #[cfg(ocvrs_has_module_ximgproc)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ximgproc)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ximgproc)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xobjdetect`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:213:8
    |
213 |     #[cfg(ocvrs_has_module_xobjdetect)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xobjdetect)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xobjdetect)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_xphoto`
   --> /home/wzw/project/rust/opencv-rust/opencv-0.92.0/target/debug/build/opencv-f9de47c3e4279693/out/opencv/hub.rs:215:8
    |
215 |     #[cfg(ocvrs_has_module_xphoto)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_xphoto)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_xphoto)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_core`
  --> src/lib.rs:16:8
   |
16 |     #[cfg(ocvrs_has_module_core)]
   |           ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_core)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_core)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_32`
 --> src/cond_macros.rs:1:7
  |
1 | #[cfg(ocvrs_opencv_branch_32)]
  |       ^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_32)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_32)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_32`
  --> src/cond_macros.rs:31:11
   |
31 | #[cfg(not(ocvrs_opencv_branch_32))]
   |           ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_32)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_32)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_32`
  --> src/cond_macros.rs:60:11
   |
60 | #[cfg(not(ocvrs_opencv_branch_32))]
   |           ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_32)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_32)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_32`
  --> src/cond_macros.rs:67:7
   |
67 | #[cfg(ocvrs_opencv_branch_32)]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_32)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_32)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_34`
  --> src/cond_macros.rs:75:7
   |
75 | #[cfg(ocvrs_opencv_branch_34)]
   |       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_34)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_34)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_34`
   --> src/cond_macros.rs:104:11
    |
104 | #[cfg(not(ocvrs_opencv_branch_34))]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_34)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_34)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_34`
   --> src/cond_macros.rs:132:11
    |
132 | #[cfg(not(ocvrs_opencv_branch_34))]
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_34)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_34)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_34`
   --> src/cond_macros.rs:138:7
    |
138 | #[cfg(ocvrs_opencv_branch_34)]
    |       ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_34)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_34)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
   --> src/cond_macros.rs:167:7
    |
167 | #[cfg(ocvrs_opencv_branch_4)]
    |       ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
   --> src/cond_macros.rs:173:11
    |
173 | #[cfg(not(ocvrs_opencv_branch_4))]
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
   --> src/cond_macros.rs:180:11
    |
180 | #[cfg(not(ocvrs_opencv_branch_4))]
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
   --> src/cond_macros.rs:209:7
    |
209 | #[cfg(ocvrs_opencv_branch_4)]
    |       ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `opencv` (lib) generated 318 warnings
warning: `opencv` (lib test) generated 318 warnings (318 duplicates)
warning: unexpected `cfg` condition name: `ocvrs_has_module_imgproc`
 --> tests/imgproc.rs:1:8
  |
1 | #![cfg(ocvrs_has_module_imgproc)]
  |        ^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgproc)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgproc)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `ocvrs_has_module_aruco`
 --> tests/marshalling_only_latest_opencv.rs:5:11
  |
5 | #[cfg(all(ocvrs_has_module_aruco, any(ocvrs_opencv_branch_34, ocvrs_opencv_branc...
  |           ^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_aruco)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_aruco)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_34`
 --> tests/marshalling_only_latest_opencv.rs:5:39
  |
5 | #[cfg(all(ocvrs_has_module_aruco, any(ocvrs_opencv_branch_34, ocvrs_opencv_branc...
  |                                       ^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_34)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_34)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
 --> tests/marshalling_only_latest_opencv.rs:5:63
  |
5 | ...any(ocvrs_opencv_branch_34, ocvrs_opencv_branch_4)))]
  |                                ^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `opencv` (test "imgproc") generated 1 warning
warning: `opencv` (test "marshalling_only_latest_opencv") generated 3 warnings
   Compiling opencv v0.92.0 (/home/wzw/project/rust/opencv-rust/opencv-0.92.0)
warning: unexpected `cfg` condition name: `ocvrs_has_module_features2d`
 --> tests/features2d.rs:1:8
  |
1 | #![cfg(ocvrs_has_module_features2d)]
  |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_features2d)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_features2d)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: `opencv` (test "features2d") generated 1 warning
warning: unexpected `cfg` condition name: `ocvrs_has_module_ml`
 --> tests/ml.rs:1:8
  |
1 | #![cfg(ocvrs_has_module_ml)]
  |        ^^^^^^^^^^^^^^^^^^^
  |
  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_ml)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_ml)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `ocvrs_has_module_videostab`
  --> tests/boxed.rs:61:9
   |
61 |     #![cfg(ocvrs_has_module_videostab)]
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_videostab)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_videostab)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `ocvrs_has_module_features2d`
  --> tests/boxed.rs:83:9
   |
83 |     #![cfg(ocvrs_has_module_features2d)]
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_features2d)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_features2d)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_features2d`
   --> tests/boxed.rs:100:9
    |
100 |     #![cfg(ocvrs_has_module_features2d)]
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_features2d)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_features2d)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_rgbd`
   --> tests/boxed.rs:114:9
    |
114 |     #![cfg(ocvrs_has_module_rgbd)]
    |            ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_rgbd)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_rgbd)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_stitching`
   --> tests/boxed.rs:139:9
    |
139 |     #![cfg(ocvrs_has_module_stitching)]
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stitching)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stitching)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
  --> tests/boxed.rs:71:8
   |
71 |     #[cfg(ocvrs_opencv_branch_4)]
   |           ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
  --> tests/boxed.rs:73:12
   |
73 |     #[cfg(not(ocvrs_opencv_branch_4))]
   |               ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
  --> tests/boxed.rs:84:8
   |
84 |     #[cfg(ocvrs_opencv_branch_4)]
   |           ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
  --> tests/boxed.rs:86:12
   |
86 |     #[cfg(not(ocvrs_opencv_branch_4))]
   |               ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `opencv` (test "ml") generated 1 warning
warning: `opencv` (test "boxed") generated 9 warnings
warning: unexpected `cfg` condition name: `ocvrs_has_module_cudafilters`
  --> examples/cuda.rs:40:12
   |
40 |     #[cfg(all(ocvrs_has_module_cudafilters, ocvrs_has_module_cudaimgproc))]
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_cudafilters)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_cudafilters)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `ocvrs_has_module_cudaimgproc`
  --> examples/cuda.rs:40:42
   |
40 |     #[cfg(all(ocvrs_has_module_cudafilters, ocvrs_has_module_cudaimgproc))]
   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_cudaimgproc)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_cudaimgproc)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `opencv` (example "cuda") generated 2 warnings
warning: unexpected `cfg` condition name: `ocvrs_has_module_imgcodecs`
 --> tests/imgcodecs.rs:1:8
  |
1 | #![cfg(ocvrs_has_module_imgcodecs)]
  |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_imgcodecs)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_imgcodecs)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: `opencv` (test "imgcodecs") generated 1 warning
warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
  --> tests/core.rs:58:7
   |
58 | #[cfg(ocvrs_opencv_branch_4)]
   |       ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: `opencv` (test "core") generated 1 warning
warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
 --> tests/core_only_latest_opencv.rs:2:8
  |
2 | #![cfg(ocvrs_opencv_branch_4)]
  |        ^^^^^^^^^^^^^^^^^^^^^
  |
  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `ocvrs_has_module_stitching`
 --> tests/stitching.rs:1:8
  |
1 | #![cfg(ocvrs_has_module_stitching)]
  |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_stitching)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_stitching)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
 --> tests/input_output_array.rs:4:7
  |
4 | #[cfg(ocvrs_opencv_branch_4)]
  |       ^^^^^^^^^^^^^^^^^^^^^
  |
  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `ocvrs_opencv_branch_4`
 --> tests/input_output_array.rs:6:11
  |
6 | #[cfg(not(ocvrs_opencv_branch_4))]
  |           ^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_opencv_branch_4)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_opencv_branch_4)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `ocvrs_has_module_cudaimgproc`
   --> tests/input_output_array.rs:137:8
    |
137 |     #[cfg(ocvrs_has_module_cudaimgproc)]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ocvrs_has_module_cudaimgproc)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(ocvrs_has_module_cudaimgproc)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

error[E0599]: no method named `points_vec` found for struct `RotatedRect` in the current scope
  --> tests/core_only_latest_opencv.rs:11:7
   |
11 |     rect.points_vec(&mut vec_pts)?;
   |          ^^^^^^^^^^
   |
help: there is a method `points` with a similar name
   |
11 |     rect.points(&mut vec_pts)?;
   |          ~~~~~~

For more information about this error, try `rustc --explain E0599`.
warning: `opencv` (test "core_only_latest_opencv") generated 1 warning
error: could not compile `opencv` (test "core_only_latest_opencv") due to 1 previous error; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: `opencv` (test "stitching") generated 1 warning
warning: `opencv` (test "input_output_array") generated 3 warnings
